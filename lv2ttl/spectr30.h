// generated by lv2ttl2c from
// http://gareus.org/oss/lv2/meters#spectr30mono

extern const LV2_Descriptor* lv2_descriptor(uint32_t index);
extern const LV2UI_Descriptor* lv2ui_spectr30(uint32_t index);

static const RtkLv2Description _plugin_spectr30 = {
	&lv2_descriptor,
	&lv2ui_spectr30
	, 13 // uint32_t dsp_descriptor_id
	, 0 // uint32_t gui_descriptor_id
	, "1/3 Octave Spectrum Analyzer" // const char *plugin_human_id
	, (struct LV2Port[])
	{
		{ "band25", CONTROL_OUT, -100.000000},
		{ "band31", CONTROL_OUT, nan},
		{ "band40", CONTROL_OUT, nan},
		{ "band50", CONTROL_OUT, nan},
		{ "band63", CONTROL_OUT, nan},
		{ "band80", CONTROL_OUT, nan},
		{ "band100", CONTROL_OUT, nan},
		{ "band125", CONTROL_OUT, nan},
		{ "band160", CONTROL_OUT, nan},
		{ "band200", CONTROL_OUT, nan},
		{ "band250", CONTROL_OUT, nan},
		{ "band315", CONTROL_OUT, nan},
		{ "band400", CONTROL_OUT, nan},
		{ "band500", CONTROL_OUT, nan},
		{ "band630", CONTROL_OUT, nan},
		{ "band800", CONTROL_OUT, nan},
		{ "band1000", CONTROL_OUT, nan},
		{ "band1250", CONTROL_OUT, nan},
		{ "band1600", CONTROL_OUT, nan},
		{ "band2000", CONTROL_OUT, nan},
		{ "band2500", CONTROL_OUT, nan},
		{ "band3150", CONTROL_OUT, nan},
		{ "band4000", CONTROL_OUT, nan},
		{ "band5000", CONTROL_OUT, nan},
		{ "band6300", CONTROL_OUT, nan},
		{ "band8000", CONTROL_OUT, nan},
		{ "band10000", CONTROL_OUT, nan},
		{ "band12500", CONTROL_OUT, nan},
		{ "band16000", CONTROL_OUT, nan},
		{ "band20000", CONTROL_OUT, nan},
		{ "max25", CONTROL_OUT, nan},
		{ "max31", CONTROL_OUT, nan},
		{ "max40", CONTROL_OUT, nan},
		{ "max50", CONTROL_OUT, nan},
		{ "max63", CONTROL_OUT, nan},
		{ "max80", CONTROL_OUT, nan},
		{ "max100", CONTROL_OUT, nan},
		{ "max125", CONTROL_OUT, nan},
		{ "max160", CONTROL_OUT, nan},
		{ "max200", CONTROL_OUT, nan},
		{ "max250", CONTROL_OUT, nan},
		{ "max315", CONTROL_OUT, nan},
		{ "max400", CONTROL_OUT, nan},
		{ "max500", CONTROL_OUT, nan},
		{ "max630", CONTROL_OUT, nan},
		{ "max800", CONTROL_OUT, nan},
		{ "max1000", CONTROL_OUT, nan},
		{ "max1250", CONTROL_OUT, nan},
		{ "max1600", CONTROL_OUT, nan},
		{ "max2000", CONTROL_OUT, nan},
		{ "max2500", CONTROL_OUT, nan},
		{ "max3150", CONTROL_OUT, nan},
		{ "max4000", CONTROL_OUT, nan},
		{ "max5000", CONTROL_OUT, nan},
		{ "max6300", CONTROL_OUT, nan},
		{ "max8000", CONTROL_OUT, nan},
		{ "max10000", CONTROL_OUT, nan},
		{ "max12500", CONTROL_OUT, nan},
		{ "max16000", CONTROL_OUT, nan},
		{ "max20000", CONTROL_OUT, nan},
		{ "UIspeed", CONTROL_IN, 1.000000},
		{ "UIreset", CONTROL_IN, -4.000000},
		{ "UIgain", CONTROL_IN, 0.000000},
		{ "UImiscstate", CONTROL_IN, 1.000000},
		{ "in", AUDIO_IN, nan},
		{ "out", AUDIO_OUT, nan},
	}
	, 66 // uint32_t nports_total
	, 1 // uint32_t nports_audio_in
	, 1 // uint32_t nports_audio_out
	, 0 // uint32_t nports_midi_in
	, 0 // uint32_t nports_midi_out
	, 0 // uint32_t nports_atom_in
	, 0 // uint32_t nports_atom_out
	, 64 // uint32_t nports_ctrl
	, 4 // uint32_t nports_ctrl_in
	, 60 // uint32_t nports_ctrl_out
	, 8192 // uint32_t min_atom_bufsiz
	, false // bool send_time_info
};

#ifdef X42_PLUGIN_STRUCT
#undef X42_PLUGIN_STRUCT
#endif
#define X42_PLUGIN_STRUCT _plugin_spectr30
